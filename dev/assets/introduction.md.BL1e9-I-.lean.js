import{_ as l,c as s,j as t,a as e,a5 as n,o as i}from"./chunks/framework.JxB36BY9.js";const k=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"introduction.md","filePath":"introduction.md","lastUpdated":null}'),o={name:"introduction.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.244ex",height:"1.731ex",role:"img",focusable:"false",viewBox:"0 -683 3201.9 765","aria-hidden":"true"};function p(u,a,m,Q,h,g){return i(),s("div",null,[a[10]||(a[10]=t("h1",{id:"introduction",tabindex:"-1"},[e("Introduction "),t("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1)),a[11]||(a[11]=t("p",null,[t("code",null,"StationaryRandomFields.jl"),e(" simulates realistic correlated noise for signal data of any given dimensions. The package follows the power-law noise procedure introduced by "),t("a",{href:"https://ui.adsabs.harvard.edu/abs/1995A%26A...300..707T/abstract",target:"_blank",rel:"noreferrer"},"Timmer et al. (1995)"),e("; random Gaussian noise is drawn in the Fourier frequency domain and scaled by the square root of a power law spectrum. An inverse transform back to the signal domain gives the stochastic power-law noise.")],-1)),a[12]||(a[12]=t("p",null,"The module currently",-1)),t("ul",null,[a[8]||(a[8]=t("li",null,[t("p",null,"Provides abstract data types and methods to define noise signals, construct and modify power-law scaling functions, and generate signal noise")],-1)),t("li",null,[a[7]||(a[7]=t("p",null,"Implements multiple power spectrum types:",-1)),t("ul",null,[t("li",null,[t("p",null,[a[2]||(a[2]=e("Basic spectra of form ")),t("mjx-container",r,[(i(),s("svg",d,a[0]||(a[0]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1028.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(2084.6,0)"><g data-mml-node="mi"><path data-c="1D708" d="M74 431Q75 431 146 436T219 442Q231 442 231 434Q231 428 185 241L137 51H140L150 55Q161 59 177 67T214 86T261 119T312 165Q410 264 445 394Q458 442 496 442Q509 442 519 434T530 411Q530 390 516 352T469 262T388 162T267 70T106 5Q81 -2 71 -2Q66 -2 59 -1T51 1Q45 5 45 11Q45 13 88 188L132 364Q133 377 125 380T86 385H65Q59 391 59 393T61 412Q65 431 74 431Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(614.8,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"P"),t("mo",null,"="),t("msup",null,[t("mi",null,"ν"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"α")])])])],-1))]),a[3]||(a[3]=e(" (")),a[4]||(a[4]=t("a",{href:"/EHTJulia.github.io/StationaryRandomFields.jl/dev/autodocs#StationaryRandomFields.SinglePowerLaw"},[t("code",null,"SinglePowerLaw")],-1)),a[5]||(a[5]=e(")"))])]),a[6]||(a[6]=t("li",null,[t("p",null,[e("Cut-off spectra with inner and outer scales ("),t("a",{href:"/EHTJulia.github.io/StationaryRandomFields.jl/dev/autodocs#StationaryRandomFields.SaturatedPowerLaw"},[t("code",null,"SaturatedPowerLaw")]),e(")")])],-1))])]),a[9]||(a[9]=t("li",null,[t("p",null,"Provides methods to reverse the process and retrieve underlying power spectra from input signal noise")],-1))]),a[13]||(a[13]=n(`<h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>The package can be installed by running:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;StationaryRandomFields&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,3))])}const c=l(o,[["render",p]]);export{k as __pageData,c as default};
