var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PowerSpectrumNoises","category":"page"},{"location":"#PowerSpectrumNoises","page":"Home","title":"PowerSpectrumNoises","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PowerSpectrumNoises.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PowerSpectrumNoises]","category":"page"},{"location":"#PowerSpectrumNoises.AbstractNoisePowerSpectrum","page":"Home","title":"PowerSpectrumNoises.AbstractNoisePowerSpectrum","text":"AbstractNoisePowerSpectrum\n\nThis is an abstract data type for noise power spectra.\n\nMandatory fields\n\namp::Float64: amplitude of power spectrum\nindex::Float64: power law index β \n\nMandatory methods\n\n-map_ampspectrum_point(psmodel::AbstractNoisePowerSpectrum, singleν::Number): maps power spectrum amplitude for a single frequency point -map_ampspectrum(psmodel::AbstractNoisePowerSpectrum, gridofν::AbstractArray...): maps power spectrum amplitudes for a grid of frequencies -map_powerspectrum_point(psmodel::AbstractNoisePowerSpectrum, singleν::Number): maps power spectrum for a single frequency point -map_powerspectrum(psmodel::AbstractNoisePowerSpectrum, gridofν::AbstractArray...): maps power spectrum for a grid of frequencies\n\n\n\n\n\n","category":"type"},{"location":"#PowerSpectrumNoises.AbstractNoiseSignal","page":"Home","title":"PowerSpectrumNoises.AbstractNoiseSignal","text":"AbstractNoiseSignal\n\nThis is an abstract data type for signal data on which powerspectrum noises will be created. The data type contains information to define the dimensions and sizes of data, and provides various methods.\n\nMandatory fields\n\ndims::Tuple: dimension of data\npixelsizes::Tuple: pixel size along with each dimension\n\nMandatory methods\n\nsize(data::AbstractNoiseSignal): returns the size of the signal\nndims(data::AbstractNoiseSignal): returns the number of the dimension\nsignalgrid(data::AbstractNoiseSignal): returns position grid in the image plane\nrfftsize(data::AbstractNoiseSignal): returns the size of the signal in the Fourier plane (for rfft)\nrfftfreq(data::AbstractNoiseSignal): returns the frequency grid along each dimension in the Fourier plane (for rfft)\ngenerate_gaussian_noise(data::AbstractNoiseSignal): returns Gaussian noises in Fourier domain with the size of rfftsize(data)\n\n\n\n\n\n","category":"type"},{"location":"#PowerSpectrumNoises.NoiseSignal1D","page":"Home","title":"PowerSpectrumNoises.NoiseSignal1D","text":"NoiseSignal1D <: AbstractNoiseSignal\n\nThis is a data type for one dimensional noise signals.\n\n\n\n\n\n","category":"type"},{"location":"#PowerSpectrumNoises.NoiseSignal2D","page":"Home","title":"PowerSpectrumNoises.NoiseSignal2D","text":"NoiseSignal2D <: AbstractNoiseSignal\n\nThis is a data type for two dimensional noise signals.\n\nMandatory methods\n\nfreq_norm: 2D matrix of norms of each frequency point in fourier space\n\n\n\n\n\n","category":"type"},{"location":"#PowerSpectrumNoises.generate_gaussian_noise-Tuple{AbstractNoiseSignal}","page":"Home","title":"PowerSpectrumNoises.generate_gaussian_noise","text":"generate_gaussian_noise(data::AbstractNoiseSignal; rng=Random.default_rng())\n\nGenerate complex gausisian noises on Fourier space over the frequency space expected for Real FFT. This return a complex array, which is consistent with Fourier-domain representation of a real uncorrelated Gaussian noise with the zero mean and variance of sizeof(data)/2 in signal-domain. The size of the output array is given by rfftsize(data).\n\n\n\n\n\n","category":"method"},{"location":"#PowerSpectrumNoises.rfftsize-Tuple{AbstractNoiseSignal}","page":"Home","title":"PowerSpectrumNoises.rfftsize","text":"rfftsize(data::AbstractNoiseSignal)::Tuple\n\nReturns the size of the Fourier-domain signal\n\n\n\n\n\n","category":"method"}]
}
